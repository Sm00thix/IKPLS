name: Release
description: Create a GitHub release

runs:
    using: "composite"
    steps:
      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          version=$(grep -o 'version = "[^"]*"' pyproject.toml | sed -E 's/version = "(.*)"/\1/')
          echo "VERSION=$version" >> $GITHUB_ENV
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "v${{ env.VERSION }}"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
        shell: bash
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          "v${{ env.VERSION }}" dist/**
          --repo "$GITHUB_REPOSITORY"
        shell: bash